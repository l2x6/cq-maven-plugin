package org.apache.camel.quarkus.component.foo.it;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import jakarta.ws.rs.GET;
import jakarta.ws.rs.Path;
import jakarta.ws.rs.Produces;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;
import org.apache.camel.CamelContext;
import org.jboss.logging.Logger;

@Path("/foo")
@ApplicationScoped

public class FooResource {

    private static final Logger LOG = Logger.getLogger(IrcResource.class);

    private static final String COMPONENT_FOO = "foo";
    @Inject
    CamelContext context;

    @Path("/load/component/foo")
    @GET
    @Produces(MediaType.TEXT_PLAIN)
    public Response loadComponentFoo() throws Exception {
        /* This is an autogenerated test */
        if (context.getComponent(COMPONENT_FOO) != null) {
            return Response.ok().build();
        }
        LOG.warnf("Could not load [%s] from the Camel context", COMPONENT_FOO);
        return Response.status(500, COMPONENT_FOO + " could not be loaded from the Camel context").build();
    }
}
